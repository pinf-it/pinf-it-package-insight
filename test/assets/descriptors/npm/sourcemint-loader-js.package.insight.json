{
    "lookupPaths": [
        "descriptors/npm/sourcemint-loader-js.package.json"
    ],
    "descriptorPaths": [
        "descriptors/npm/sourcemint-loader-js.package.json"
    ],
    "raw": {
        "uid": "https://github.com/sourcemint/loader-js/",
        "name": "sourcemint-loader-js",
        "version": "0.3.7",
        "pm": "npm",
        "shrinkwrap": true,
        "main": "loader.js",
        "directories": {
            "lib": "."
        },
        "devDependencies": {
            "q": {
                "selector": "0.x"
            },
            "sourcemint-platform-nodejs": {
                "selector": "0.x"
            }
        },
        "scripts": {
            "test": "node tests/examples"
        },
        "readme": "Optimized [PINF](http://pinf.org/)/[CommonJS](http://commonjs.org/) Loader for JavaScript\n=========================================================================================\n\n*Status: ALPHA* [![Build Status](https://secure.travis-ci.org/sourcemint/loader-js.png)](http://travis-ci.org/sourcemint/loader-js)\n\nThe `Sourcemint JavaScript Loader` is an optimized *(intended for production use)* **CommonJS package mappings** \nbased **JavaScript module loader** for the browser in only **1720 bytes** *(minified and zipped)*.\n\n  * Copyright: 2011 [Christoph Dorn](http://www.christophdorn.com/)\n  * Code License: [MIT](http://www.opensource.org/licenses/mit-license.php) and [MPL](http://mozilla.org/MPL/2.0/)\n  * Docs License: [Creative Commons Attribution-NonCommercial-ShareAlike 3.0](http://creativecommons.org/licenses/by-nc-sa/3.0/)\n  * Sponsor: [Sourcemint](http://sourcemint.com/)\n  * Mailing list: [groups.google.com/group/sourcemint](http://groups.google.com/group/sourcemint)\n\n**Online Demo: [sourcemint.github.com/loader-js/workspace/www](http://sourcemint.github.com/loader-js/workspace/www/index.html)**\n\n**Examples: [github.com/sourcemint/examples-js](http://github.com/sourcemint/examples-js/)**\n\n\nWhat\n----\n\nThe `Sourcemint JavaScript Loader` provides a **minimal CommonJS environment** that requests **optimized static JavaScript code files** \ncalled **Bundles** from a server via **GET requests** and boots these into sandboxes in the browser identified by the requested URL.\n\nSupported Environments:\n\n  * Browser:\n      * Firefox\n      * Google Chrome\n      * Internet Explorer\n        * **BUG** [https://github.com/sourcemint/loader-js/issues/1](https://github.com/sourcemint/loader-js/issues/1)\n      * Safari\n      * Opera\n\t    * **BUG:** [https://github.com/sourcemint/loader-js/issues/8](https://github.com/sourcemint/loader-js/issues/8)\n\nSupported features:\n\n  * Load bundled JavaScript programs from static URLs\n  * Asynchronously load more program code bundles as needed\n  * Load bundles cross-domain\n  * Isolated module scopes\n  * Isolated package namespaces\n  * Isolated sandbox namespaces\n  * Nested and circular dependency trees\n  * Consistent mapping of static application resource URLs to loader namespaces\n  * [CommonJS/Modues/1.1](http://wiki.commonjs.org/wiki/Modules/1.1)\n    * `function(require, exports, module) {}`\n    * `var ModuleAPI = require(\"./Module\")`\n  * [CommonJS/Packages/Mappings/C (proposal)](http://wiki.commonjs.org/wiki/Packages/Mappings/C)\n    * `package.json ~ {mappings:{\"PackageAlias\": \"PackageIdentifier\"}}`\n    * `var ModuleAPI = require(\"PackageAlias/Module\")`\n  * [CommonJS/Modues/2.0draft8 (draft)](http://www.page.ca/~wes/CommonJS/modules-2.0-draft8/)\n    * `global.require.memoize(\"PackageIdentifier/ModuleIdentifier\", ModuleInitializer)` (no dependency argument)\n    * `require.id(ModuleIdentifierString)` (returns *PackageIdentifier/ModuleIdentifier*)\n  * [(Un)CommonJS(kriskowal)/Modules](https://github.com/kriskowal/uncommonjs/blob/master/modules/specification.md)\n    * `require.async(ModuleIdentifierString, function loaded(ModuleAPI) {}, function error(e) {})`\n  * Proposed:\n    * `[global.]require.sandbox(SandboxURI, function loaded(sandbox) {}, SandboxOptions)`\n    * `[global.]require.sandbox.id` to hold *SandboxURI*\n    * `sandbox.main()`\n    * `require.bundle(\"BundleIdentifier\", function ConsistentModuleSet(require) {})`\n\nApplications may be **coded directly in the bundle format**. Alternatively the bundle format may be treated as a **compile target**.\nThe following tools can generate `Sourcemint JavaScript Loader` compatible bundles:\n\n  * [Sourcemint NodeJS Platform](https://github.com/sourcemint/platform-nodejs)\n    \n    Supports:\n    \n      * [NodeJS Modules](http://nodejs.org/docs/latest/api/modules.html)\n      * [CommonJS Modules (CJS)](http://wiki.commonjs.org/wiki/Modules/1.1)\n      * [Asynchronous Module Definition (AMD)](https://github.com/amdjs/amdjs-api/wiki/AMD)\n\n\nWhy\n---\n\nNamespace isolation is essential for modular development when integrating arbitrary JavaScript libraries.\n\nTo achieve namespace isolation you need JavaScript libraries written in conventions that:\n  \n  * do not pollute the global namespace and \n  * expose the library's API consistently\n\nThere are two evolving standards that specify such conventions:\n\n  * [CommonJS Modules (CJS)](http://wiki.commonjs.org/wiki/Modules/1.1)\n  * [Asynchronous Module Definition (AMD)](https://github.com/amdjs/amdjs-api/wiki/AMD)\n\nWhen coding using these standards you need to keep in mind the two primary environments that the application will run in:\n\n  1) **Development** - Needs a loader that will, on demand, locate in the source tree, assemble and transport module source \n\t files to the browser for rapid development.\n\n  2) **Production** - Needs a build step that collects modules from the source tree and generates static optimized bundles that will be fetched\n\t by a loader optimized for production runtime performance.\n\nThe `Sourcemint JavaScript Loader` is intended to run your application in **production**. \n\n\nUsage\n=====\n\nIn Browser\n----------\n\n`http://localhost/index.html`\n\n\t<script type=\"text/javascript\" src=\"loader.js\"></script>\n\t<script type=\"text/javascript\">\n\t\trequire.sandbox(\"app.js\", function(sandbox)\n\t\t{\n\t\t\tsandbox.main();\n\t\t});\n\t</script>\n\n`http://localhost/app.js`\n\n\trequire.bundle(\"\", function(require)\n\t{\n\t\trequire.memoize(\"/main.js\", function(require, exports, module)\n\t\t{\n\t\t\texports.main = function(options)\n\t\t\t{\n\t\t\t\tconsole.log(\"HelloWorld!\");\n\t\t\t}\n\t\t});\n\t});\n\nOn Server\n---------\n\n`./index.js`\n\n    var LOADER = require(\"sourcemint-platform-nodejs/loader\");  // NPM package\n    \n    LOADER.sandbox(\"./app.js\", function(sandbox)\n    {\n        sandbox.main();\n    });\n\n`./app.js`\n\n    require.bundle(\"\", function(require)\n    {\n        require.memoize(\"/main.js\", function(require, exports, module)\n        {\n            var __filename = require.sandbox.id + \"/main.js\";\n            var __dirname = require.sandbox.id + \"\";\n\n            exports.main = function(options)\n            {\n                console.log(\"HelloWorld!\");\n            }\n        });\n    });\n\n\nTests\n-----\n\nThe command-line test suite for the loader uses the [Sourcemint NodeJS Platform](https://github.com/sourcemint/platform-nodejs)\nto bootstrap the loader for [NodeJS](http://nodejs.org/).\n\n    git clone git://github.com/sourcemint/loader-js.git sourcemint-loader-js\n    cd sourcemint-loader-js\n    npm install\n    npm test\n\n\nExamples\n========\n\nThere are various examples that double as unit tests in `./examples`.\n\nFor an online demo of the loader features see [sourcemint.github.com/loader-js/workspace/www](http://sourcemint.github.com/loader-js/workspace/www/index.html).\n\nFor end-user examples of common use-cases see [github.com/sourcemint/examples-js](http://github.com/sourcemint/examples-js/).\n\nMore examples and documentation will be available in time.\n\n\nTips\n====\n\n  * When testing an application use the `./loader.js` file to get all error messages.\n  * When deploying an application us the `./loader.min.gz` file for optimum performance.\n  * When using a different loader during development make sure only supported API features\n    of this loader are used. Load extra features along with your application by\n    [augmenting a sandbox](https://github.com/sourcemint/loader-js/blob/master/examples/10-Sandbox.js).\n  * When writing or generating bundles make sure one consistent set of statically linked modules\n    is contained in each bundle file. Dynamic links to other modules or bundles must be made via\n    `require.async()` or `require.sandbox()` respectively. The hierarchy of how your application nests\n    these dynamic links will determine which modules must be included in subsequently loaded bundles\n    to avoid sending the same modules twice.\n  * A module can only be memoized once for each *Canonical Identifier* (comprising of *SandboxIdentifier/PackageIdentifier/ModuleIdentifier*).\n    When placing modules into bundles make sure bundle filenames do not overlap with module filenames (and the reverse) as these \n    have the potential to conflict (modules and bundles share the same logical file hierarchy). The idea is that a set of statically \n    linked modules can always be combined into one file which is placed into the file that first requires the dependencies \n    and represents the entry point into the bundle.\n\n\nFAQ\n===\n\nWhy does the loader not support feature X?\n------------------------------------------\n\nThis loader is pretty much complete in terms of what needs to be implemented at the core\nloader level. Convenience features can be loaded along with the application by\n[augmenting a sandbox](https://github.com/sourcemint/loader-js/blob/master/examples/10-Sandbox.js).\n\nWhy does the loader not support [AMD-style Loader Plugins](https://github.com/amdjs/amdjs-api/wiki/Loader-Plugins)?\n-------------------------------------------------------------------------------------------------------------------\n\nBecause loader plugins that are invoked by modifying the string literal passed to `require()` are not necessary\nand combine two concepts that should really be separate and implemented differently. For more information see\n[this discussion](http://groups.google.com/group/requirejs/browse_thread/thread/3a06691288655a74).\n\nThe AMD-style Loader Plugins can be replaced by:\n\n  * [Augmenting a sandbox](https://github.com/sourcemint/loader-js/blob/master/examples/10-Sandbox.js)\n  * Loading helper modules within the application.\n  * Using a loader that can run package-declared plugins.\n  * Using a server helper to run plugins as modules are requested.\n\n*NOTE: Modules using some of the RequireJS loader plugins can be automatically converted to run on this loader using\n[github.com/sourcemint/sdk-requirejs](http://github.com/sourcemint/sdk-requirejs/).*\n\nHow does the loader compare to [almond](https://github.com/jrburke/almond)?\n----------------------------------------------------------------------------------------------\n\nWhile the [RequireJS](https://github.com/jrburke/requirejs) + \n[almond](https://github.com/jrburke/almond) combination focuses on loading of optimized [AMD](https://github.com/amdjs/amdjs-api/wiki/AMD)\nformatted modules this loader focuses on loading of optimized [CJS](http://wiki.commonjs.org/wiki/Modules/1.1) formatted modules.\n\nThe *AMD Specification* is a small subset combining several *CommonJS Concepts* in a different form.\n\n*CommonJS* represents a more pure and modular approach to devising arbitrary JavaScript application architectures by\ncarefully layering a few core concepts into a framework that provides one small existential foundation\nfor all other concepts. It allows for isolated namespaces, nested package dependency structures and runtime sandboxes \nas well as automatic conversion from source trees to optimized bundles. This loader is one *existential foundation implementation*\nand fully compatible with the *CommonJS Concepts*.\n\nIn contrast *RequireJS + almond* focuses on optimally loading (primarily into the browser) a list of packages containing \nJavaScript modules and resource files into a single namespace. In optimized form (for *almond*), several \nkey *RequireJS* features are not supported.\n\n\nLinks\n=====\n\n**Influential Specifications:**\n\n  * [CommonJS/Modues/1.1 (approved)](http://wiki.commonjs.org/wiki/Modules/1.1)\n  * [(Un)CommonJS(kriskowal)/Modules](https://github.com/kriskowal/uncommonjs/blob/master/modules/specification.md)\n  * [CommonJS/Modues/2.0draft8 (draft)](http://www.page.ca/~wes/CommonJS/modules-2.0-draft8/) with changes that will become `CommonJS/Modues/2/B`\n  * [CommonJS/Packages/1.1 (draft)](http://wiki.commonjs.org/wiki/Packages/1.1) with changes that will become `CommonJS/Packages/1.2`\n  * [CommonJS/Packages/Mappings/C (proposal)](http://wiki.commonjs.org/wiki/Packages/Mappings/C) with changes that will become `Packages/Mappings/E`\n  * [Asynchronous Module Definition (AMD)](https://github.com/amdjs/amdjs-api/wiki/AMD)\n\n**Prior Art:**\n\n  * https://github.com/unscriptable/curl\n  * https://github.com/jrburke/almond\n  * https://github.com/jrburke/requirejs\n  * http://code.google.com/p/bravojs/\n  * https://github.com/NobleJS/Noble-Modules\n  * https://github.com/pinf/loader-js\n  * https://github.com/kriszyp/nodules\n\n**Discussions:**\n\n  * [groups.google.com/group/commonjs - Introducing the Sourcemint JavaScript Loader](http://groups.google.com/group/commonjs/browse_thread/thread/153ff1a966e56cb)\n  * [groups.google.com/group/requirejs - Alternative production loader to almond](http://groups.google.com/group/requirejs/browse_thread/thread/3a06691288655a74)\n  * [groups.google.com/group/firebug-working-group - Better Firebug Loader & Module Packaging](https://groups.google.com/d/topic/firebug-working-group/qWR1wdB-WQA/discussion)\n\n\nContribute\n==========\n\nTo work on the loader use the `./workspace/` (**Development Workspace**). Instructions on how to launch it on your local\nsystem can be found here: \n[https://github.com/sourcemint/loader-js/tree/master/workspace](https://github.com/sourcemint/loader-js/tree/master/workspace)\n\nWhen done send a pull request.\n",
        "readmeFilename": "README.md",
        "_id": "sourcemint-loader-js@0.3.7",
        "description": "Optimized [PINF](http://pinf.org/)/[CommonJS](http://commonjs.org/) Loader for JavaScript =========================================================================================",
        "_from": "sourcemint-loader-js@0.x"
    },
    "normalized": {
        "uid": "https://github.com/sourcemint/loader-js/",
        "name": "sourcemint-loader-js",
        "description": "Optimized [PINF](http://pinf.org/)/[CommonJS](http://commonjs.org/) Loader for JavaScript =========================================================================================",
        "version": "0.3.7",
        "locator": {
            "pointer": "0.x"
        },
        "pm": {
            "install": "npm"
        },
        "dependencies": {
            "development": {
                "q": {
                    "selector": "0.x"
                },
                "sourcemint-platform-nodejs": {
                    "selector": "0.x"
                }
            }
        },
        "config": {
            "shrinkwrap": true
        },
        "exports": {
            "scripts": {
                "test": "node tests/examples"
            },
            "main": "./loader.js"
        },
        "layout": {
            "directories": {
                "lib": ".",
                "dependency": "./node_modules"
            }
        },
        "files": {
            "readme": "./README.md"
        }
    },
    "warnings": [],
    "errors": []
}